import { saveSteps, loadSteps, saveHistory, loadSettings } from './storage.js';

const webApp = Telegram.WebApp;
const btn = document.getElementById('toggle');
const out = document.getElementById('count');
const msg = document.getElementById('message');

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ —Å—á—ë—Ç–∞
let steps = loadSteps();
out.textContent = steps;

let g = 0, lastTime = 0;
const alpha = 0.975, THRESHOLD = 1.2, MIN_INTERVAL = 300;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π WebApp
webApp.onEvent('accelerometerStarted', () => {
  btn.textContent = '–°—Ç–æ–ø';
  btn.disabled = false;
  msg.textContent = '–î–µ—Ä–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ä—É–∫–µ –∏–ª–∏ –≤ –∫–∞—Ä–º–∞–Ω–µ –∏ –∏–¥–∏—Ç–µ üòä';
});

webApp.onEvent('accelerometerChanged', () => {
  const { x, y, z } = Telegram.WebApp.Accelerometer;
  const mag = Math.hypot(x, y, z);
  g = alpha * g + (1 - alpha) * mag;
  const a = mag - g;
  const now = performance.now();

  if (a > THRESHOLD && now - lastTime > MIN_INTERVAL) {
    steps++;
    lastTime = now;
    out.textContent = steps;
    saveSteps(steps);
    checkNotifications();
  }
});

webApp.onEvent('accelerometerFailed', ({ error }) => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–û—à–∏–±–∫–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞: ' + (error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è');
});

webApp.onEvent('accelerometerStopped', () => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–ü–∞—É–∑–∞';
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏
  saveHistory({ date: new Date().toISOString().slice(0,10), steps });
});

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ü–µ–ª–∏
function checkNotifications() {
  const { goal, notifyPercents } = loadSettings();
  if (!goal || !notifyPercents) return;
  notifyPercents.forEach(p => {
    if (steps === Math.floor(goal * p/100)) {
      webApp.showAlert(`–í—ã –ø—Ä–æ—à–ª–∏ ${p}% –æ—Ç —Ü–µ–ª–∏!`);
    }
  });
  if (steps === goal) {
    webApp.showAlert('–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ üéâ');
  }
}

// –ö–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—Ç/–°—Ç–æ–ø —Å –∫–∞–ª–∏–±—Ä–æ–≤–∫–æ–π
btn.addEventListener('click', async () => {
  btn.disabled = true;
  if (Telegram.WebApp.Accelerometer.isStarted) {
    Telegram.WebApp.Accelerometer.stop();
    return;
  }
  // –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ 1.5 —Å–µ–∫
  msg.textContent = '–ö–∞–ª–∏–±—Ä—É–µ–º‚Ä¶';
  await new Promise(r => setTimeout(r, 1500));
  // –°–±—Ä–æ—Å –∏ –∑–∞–ø—É—Å–∫
  steps = 0; g = 0; lastTime = 0;
  out.textContent = 0;
  saveSteps(0);
  btn.textContent = '–ó–∞–ø—Ä–æ—Å‚Ä¶';
  msg.textContent = '';
  Telegram.WebApp.Accelerometer.start({ refresh_rate: 100 });
});

webApp.ready();
