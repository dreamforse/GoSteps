// public/js/main.js

import {
  saveSteps,
  loadSteps,
  saveHistory,
  loadSettings
} from './storage.js';

const webApp = Telegram.WebApp;
const btn    = document.getElementById('toggle');
const out    = document.getElementById('count');
const msg    = document.getElementById('message');

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: –ø–æ–¥–≥—Ä—É–∂–∞–µ–º —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ---
let steps = loadSteps();
out.textContent = steps;

// --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø–æ–¥—Å—á—ë—Ç–∞ —à–∞–≥–æ–≤ ---
let g = 0;               // –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏
let lastTime = 0;        // –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —à–∞–≥–∞
const alpha = 0.975;     // –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ñ–∏–ª—å—Ç—Ä–∞
const THRESHOLD = 1.2;   // –ø–æ—Ä–æ–≥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —à–∞–≥–∞ (–º/—Å¬≤)
const MIN_INTERVAL = 300; // –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —à–∞–≥–∞–º–∏ (–º—Å)

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π Web App SDK ---
webApp.onEvent('accelerometerStarted', () => {
  btn.textContent = '–°—Ç–æ–ø';
  btn.disabled = false;
  msg.textContent = '–î–µ—Ä–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –≤ —Ä—É–∫–µ –∏–ª–∏ –≤ –∫–∞—Ä–º–∞–Ω–µ –∏ –∏–¥–∏—Ç–µ üòä';
});

webApp.onEvent('accelerometerChanged', () => {
  // —á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞
  const { x, y, z } = Telegram.WebApp.Accelerometer;
  const mag = Math.hypot(x, y, z);

  // —Ñ–∏–ª—å—Ç—Ä –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏ (high-pass)
  g = alpha * g + (1 - alpha) * mag;
  const a = mag - g;

  const now = performance.now();
  if (a > THRESHOLD && now - lastTime > MIN_INTERVAL) {
    // –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª–∏ —à–∞–≥
    steps++;
    lastTime = now;
    out.textContent = steps;
    saveSteps(steps);
    checkNotifications();
  }
});

webApp.onEvent('accelerometerFailed', ({ error }) => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–û—à–∏–±–∫–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞: ' + (error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è');
});

webApp.onEvent('accelerometerStopped', () => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–ü–∞—É–∑–∞';
  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å—Ç–æ–ø–µ
  saveHistory({
    date: new Date().toISOString().slice(0, 10),
    steps
  });
});

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –æ—Ç —Ü–µ–ª–∏ ---
function checkNotifications() {
  const { goal = 0, notifyPercents = [] } = loadSettings();
  if (!goal || !notifyPercents.length) return;

  // –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞, –µ—Å–ª–∏ —Ä–æ–≤–Ω–æ —Å–æ–≤–ø–∞–ª–æ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert
  notifyPercents.forEach(p => {
    if (steps === Math.floor(goal * p / 100)) {
      webApp.showAlert(`–í—ã –ø—Ä–æ—à–ª–∏ ${p}% –æ—Ç —Ü–µ–ª–∏!`);
    }
  });
  if (steps === goal) {
    webApp.showAlert('–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ üéâ');
  }
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –°—Ç–∞—Ä—Ç/–°—Ç–æ–ø —Å –∫–∞–ª–∏–±—Ä–æ–≤–∫–æ–π ---
btn.addEventListener('click', async () => {
  btn.disabled = true;

  // –µ—Å–ª–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
  if (Telegram.WebApp.Accelerometer.isStarted) {
    Telegram.WebApp.Accelerometer.stop();
    return;
  }

  // –∏–Ω–∞—á–µ ‚Äî –∫–∞–ª–∏–±—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
  msg.textContent = '–ö–∞–ª–∏–±—Ä—É–µ–º‚Ä¶';
  await new Promise(r => setTimeout(r, 1500));

  // —Å–±—Ä–æ—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  steps = 0;
  g = 0;
  lastTime = 0;
  out.textContent = 0;
  saveSteps(0);

  // –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∞—Ç—á–∏–∫
  btn.textContent = '–ó–∞–ø—Ä–æ—Å‚Ä¶';
  msg.textContent = '';
  Telegram.WebApp.Accelerometer.start({ refresh_rate: 100 });
});

// --- –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ UI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ---
webApp.ready();
