// public/js/main.js

import {
  saveSteps,
  loadSteps,
  saveHistory,
  loadSettings
} from './storage.js';

const webApp = Telegram.WebApp;
const btn    = document.getElementById('toggle');
const out    = document.getElementById('count');
const msg    = document.getElementById('message');

// --- –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ ---
let steps = loadSteps();
out.textContent = steps;

// --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ ---
let g = 0;                // —Ñ–∏–ª—å—Ç—Ä –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏
let lastTime = 0;         // –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞—Å—á–∏—Ç–∞–Ω–Ω–æ–≥–æ —à–∞–≥–∞
const alpha = 0.975;      // –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ñ–∏–ª—å—Ç—Ä–∞
const STEP_THRESHOLD = 1.2;    // –ø–æ—Ä–æ–≥ –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤
const CAL_THRESHOLD  = 2.5;    // –∂—ë—Å—Ç–∫–∏–π –ø–æ—Ä–æ–≥ –¥–ª—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
const MIN_INTERVAL   = 300;    // –º—Å –º–µ–∂–¥—É —à–∞–≥–∞–º–∏

// --- –§–ª–∞–≥–∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ ---
let gravityInitialized = false;  // –ø–µ—Ä–≤—ã–π –∑–∞–º–µ—Ä g —É–∂–µ –≤–∑—è—Ç?
let isCalibrated       = false;  // –ø—Ä–æ—à–ª–∏ –ª–∏ ¬´–∂–µ—Å—Ç–∫—É—é¬ª –∫–∞–ª–∏–±—Ä–æ–≤–∫—É?
let calSpikes          = 0;      // —Å–∫–æ–ª—å–∫–æ –ø–∏–∫–æ–≤ –≤—ã—à–µ CAL_THRESHOLD –ø–æ–π–º–∞–ª–∏

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram.WebApp ---
// –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞
webApp.onEvent('accelerometerStarted', () => {
  btn.textContent = '–í—Å—Ç—Ä—è—Ö–Ω–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω';
  btn.disabled = false;
  msg.textContent = '';
});

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–æ–≤—ã—Ö —Å—ç–º–ø–ª–æ–≤
webApp.onEvent('accelerometerChanged', () => {
  const { x, y, z } = Telegram.WebApp.Accelerometer;
  const mag = Math.hypot(x, y, z);

  // 1) –ü–µ—Ä–≤—ã–π –∑–∞–º–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä, —à–∞–≥–∏ –Ω–µ —Å—á–∏—Ç–∞–µ–º
  if (!gravityInitialized) {
    g = mag;
    gravityInitialized = true;
    return;
  }

  // 2) –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∏ —Å—á–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–µ–µ ¬´—É—Å–∫–æ—Ä–µ–Ω–∏–µ¬ª
  g = alpha * g + (1 - alpha) * mag;
  const a = mag - g;
  const now = performance.now();

  // 3) –ñ—ë—Å—Ç–∫–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞: –∂–¥—ë–º –º–∏–Ω–∏–º—É–º 2 –ø–∏–∫–∞ –≤—ã—à–µ CAL_THRESHOLD
  if (!isCalibrated) {
    if (a > CAL_THRESHOLD) {
      calSpikes++;
      // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å: —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å calSpikes, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –Ω–µ—Ç –ø–∏–∫–æ–≤?
    }
    if (calSpikes >= 2) {
      isCalibrated = true;
      lastTime = now;
      msg.textContent = '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å—á–∏—Ç–∞—Ç—å —à–∞–≥–∏!';
      btn.textContent = '–°—Ç–æ–ø';
    }
    return;
  }

  // 4) –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–¥—Å—á—ë—Ç —à–∞–≥–æ–≤ –ø–æ—Å–ª–µ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
  if (a > STEP_THRESHOLD && now - lastTime > MIN_INTERVAL) {
    steps++;
    lastTime = now;
    out.textContent = steps;
    saveSteps(steps);
    checkNotifications();
  }
});

// –û—à–∏–±–∫–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞
webApp.onEvent('accelerometerFailed', ({ error }) => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–û—à–∏–±–∫–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞: ' + (error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è');
});

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞
webApp.onEvent('accelerometerStopped', () => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–ü–∞—É–∑–∞';
  saveHistory({
    date: new Date().toISOString().slice(0, 10),
    steps
  });
});

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ —Ü–µ–ª–∏
function checkNotifications() {
  const { goal = 0, notifyPercents = [] } = loadSettings();
  if (!goal || !notifyPercents.length) return;

  notifyPercents.forEach(p => {
    if (steps === Math.floor(goal * p / 100)) {
      webApp.showAlert(`–í—ã –ø—Ä–æ—à–ª–∏ ${p}% –æ—Ç —Ü–µ–ª–∏!`);
    }
  });
  if (steps === goal) {
    webApp.showAlert('–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ üéâ');
  }
}

// –ö–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—Ç/–°—Ç–æ–ø
btn.addEventListener('click', () => {
  btn.disabled = true;

  if (Telegram.WebApp.Accelerometer.isStarted) {
    // –°—Ç–æ–ø–∏–º
    Telegram.WebApp.Accelerometer.stop();
    return;
  }

  // –ù–æ–≤—ã–π —Å—Ç–∞—Ä—Ç ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–∞–ª–∏–±—Ä–æ–≤–æ—á–Ω—ã–µ —Ñ–ª–∞–≥–∏, –Ω–æ –Ω–µ —à–∞–≥–∏
  gravityInitialized = false;
  isCalibrated       = false;
  calSpikes          = 0;
  lastTime           = 0;

  btn.textContent = '–ó–∞–ø—Ä–æ—Å‚Ä¶';
  Telegram.WebApp.Accelerometer.start({ refresh_rate: 100 });
});

// –°–æ–æ–±—â–∞–µ–º Telegram, —á—Ç–æ UI –≥–æ—Ç–æ–≤
webApp.ready();
