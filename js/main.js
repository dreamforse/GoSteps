// public/js/main.js

import {
  saveSteps,
  loadSteps,
  saveHistory,
  loadSettings
} from './storage.js';

const webApp = Telegram.WebApp;
const btn    = document.getElementById('toggle');
const out    = document.getElementById('count');
const msg    = document.getElementById('message');

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ---
let steps = loadSteps();
out.textContent = steps;

// –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞ –∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
let g = 0;
let lastTime = 0;
const alpha = 0.975;
const THRESHOLD = 1.2;    // –ø–æ—Ä–æ–≥ –¥–ª—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏ –∏ –¥–ª—è —à–∞–≥–æ–≤
const MIN_INTERVAL = 300; // –º—Å –º–µ–∂–¥—É —à–∞–≥–∞–º–∏

// —Ñ–ª–∞–≥–∏
let gravityInitialized = false;  // —Å–¥–µ–ª–∞–ª–∏ –ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–º–µ—Ä g
let isCalibrated = false;        // –ø—Ä–æ–∏–∑–æ—à–ª–∞ –ª–∏ ¬´—Ä–µ–∞–ª—å–Ω–∞—è¬ª –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞

// --- –°–æ–±—ã—Ç–∏—è Telegram.WebApp ---
// –°—Ç–∞—Ä—Ç –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞
webApp.onEvent('accelerometerStarted', () => {
  btn.textContent = '–í—Å—Ç—Ä—è—Ö–Ω–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω';
  btn.disabled = false;
  msg.textContent = '';
});

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—ç–º–ø–ª–æ–≤ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞
webApp.onEvent('accelerometerChanged', () => {
  // —Ç–µ–∫—É—â–∏–µ –æ—Å–∏
  const { x, y, z } = Telegram.WebApp.Accelerometer;
  const mag = Math.hypot(x, y, z);

  // 1) –ü—Ä–∏ –ø–µ—Ä–≤–æ–º —Å—ç–º–ø–ª–µ –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä –∏ –≤—ã—Ö–æ–¥–∏–º
  if (!gravityInitialized) {
    g = mag;
    gravityInitialized = true;
    return;
  }

  // 2) –ê–ø–¥–µ–π—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ ¬´—É—Å–∫–æ—Ä–µ–Ω–∏—è¬ª –±–µ–∑ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏
  g = alpha * g + (1 - alpha) * mag;
  const a = mag - g;
  const now = performance.now();

  // 3) –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞: –∂–¥—ë–º –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∏–∫–∞
  if (!isCalibrated) {
    if (a > THRESHOLD) {
      isCalibrated = true;
      lastTime = now;
      msg.textContent = '–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å—á–∏—Ç–∞—Ç—å —à–∞–≥–∏!';
      btn.textContent = '–°—Ç–æ–ø';
    }
    return;
  }

  // 4) –ü–æ–¥—Å—á—ë—Ç —à–∞–≥–æ–≤ —É–∂–µ –ø–æ—Å–ª–µ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
  if (a > THRESHOLD && now - lastTime > MIN_INTERVAL) {
    steps++;
    lastTime = now;
    out.textContent = steps;
    saveSteps(steps);
    checkNotifications();
  }
});

// –û—à–∏–±–∫–∞ –¥–∞—Ç—á–∏–∫–∞
webApp.onEvent('accelerometerFailed', ({ error }) => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–û—à–∏–±–∫–∞ –∞–∫—Å–µ–ª–µ—Ä–æ–º–µ—Ç—Ä–∞: ' + (error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è');
});

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—á–∏–∫–∞
webApp.onEvent('accelerometerStopped', () => {
  btn.textContent = '–°—Ç–∞—Ä—Ç';
  btn.disabled = false;
  msg.textContent = '–ü–∞—É–∑–∞';
  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é, –Ω–æ –Ω–µ –æ–±–Ω—É–ª—è–µ–º steps
  saveHistory({
    date: new Date().toISOString().slice(0, 10),
    steps
  });
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é %
function checkNotifications() {
  const { goal = 0, notifyPercents = [] } = loadSettings();
  if (!goal || !notifyPercents.length) return;

  notifyPercents.forEach(p => {
    if (steps === Math.floor(goal * p / 100)) {
      webApp.showAlert(`–í—ã –ø—Ä–æ—à–ª–∏ ${p}% –æ—Ç —Ü–µ–ª–∏!`);
    }
  });
  if (steps === goal) {
    webApp.showAlert('–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ üéâ');
  }
}

// –ö–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—Ç/–°—Ç–æ–ø
btn.addEventListener('click', () => {
  btn.disabled = true;

  // –µ—Å–ª–∏ –∏–¥—ë—Ç –ø–æ–¥—Å—á—ë—Ç ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
  if (Telegram.WebApp.Accelerometer.isStarted) {
    Telegram.WebApp.Accelerometer.stop();
    return;
  }

  // –∏–Ω–∞—á–µ ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ —Ç—Ä—è—Å–∫–∏
  gravityInitialized = false;
  isCalibrated = false;
  lastTime = 0;
  btn.textContent = '–ó–∞–ø—Ä–æ—Å‚Ä¶';
  Telegram.WebApp.Accelerometer.start({ refresh_rate: 100 });
});

// –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å UI
webApp.ready();
